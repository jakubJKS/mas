import OSPRNG.TriangularRNG;

public class Main {
    public static void main(String[] args) {
        final int pocetReplikacii = 100000; // Počet simulácií pre jeden mesiac
        TriangularRNG dopytGen = new TriangularRNG(1000.0, 4000.0, 8500.0); // Trojuholníkové rozdelenie

        int optimalneSkladovane = 0;
        double minimalnePriemerneNaklady = Double.MAX_VALUE;

        // Skladové množstvo sa mení od 4000 do 6 000 kusov
        for (int naSklade = 4000; naSklade <= 6000; naSklade++) {
            double celkoveNaklady = 0.0;

            // Simulácia pre každý scenár
            for (int i = 0; i < pocetReplikacii; i++) {
                double dopyt = dopytGen.sample(); // Generovanie náhodného dopytu bez zaokrúhľovania
                double dodatocneNaklady;

                if (dopyt > naSklade) {
                    // Nedostatok vakcín -> extra náklady na dopravu
                    dodatocneNaklady = (dopyt - naSklade) * 150.0;
                } else if (naSklade > dopyt) {
                    // Prebytok vakcín -> strata pre nepredané vakcíny
                    dodatocneNaklady = (naSklade - dopyt) * 50.0;
                } else {
                    // Presný dopyt = žiadne dodatočné náklady
                    dodatocneNaklady = 0.0;
                }

                celkoveNaklady += dodatocneNaklady;
            }

            double priemerneNaklady = celkoveNaklady / pocetReplikacii;

            // Aktualizácia optimálneho skladového množstva
            if (priemerneNaklady < minimalnePriemerneNaklady) {
                minimalnePriemerneNaklady = priemerneNaklady;
                optimalneSkladovane = naSklade;
            }
        }

        // Výsledný výstup
        System.out.printf("[počet %d]%n", optimalneSkladovane);
    }
}
